/*
 * the function returns a normalization of the structure generated by distribute function
 * the goal is that every goal in a column has at leat one square, and that the sum of the squares
 * in a column does not excede 17
 */
export default (rawSDGImpactMap) => {
    // get min and max
    const [min, max] = rawSDGImpactMap.reduce(
        (acc, i) => {
            const [currentMin, currentMax] = acc;
            const values = Object.values(i);
            return [
                Math.min(...values) < currentMin ? Math.min(...values) : currentMin,
                Math.max(...values) > currentMax ? Math.max(...values) : currentMax,
            ];
        },
        [16, 0]
    );
    // find the max number of empty square
    const maxSquareNumber = rawSDGImpactMap.reduce((acc, i) => {
        const max = 16 - Object.values(i).length;
        return max < acc ? max : acc;
    }, 16);
    // normalize the series, after that the elements with value equal to min are removed
    // because for those 1 is setted by default
    const normalizedImpactMap = rawSDGImpactMap.map((column) =>
        Object.keys(column).reduce(
            (acc, key) =>
                column[key] === min
                    ? { ...acc, [key]: 1 }
                    : {
                          ...acc,
                          [key]: Math.round(
                              ((column[key] - (min + 1)) / (max - (min + 1))) * (maxSquareNumber - 2) + 2
                          ),
                      },
            {}
        )
    );

    return normalizedImpactMap;
};
